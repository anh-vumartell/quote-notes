{"version":3,"sources":["hooks/use-input.js","UI/Card.js","components/quotes/QuoteForm.js","pages/AddQuote.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","hooks/use-http.js","lib/api.js","UI/Card.module.css","components/quotes/QuoteForm.module.css"],"names":["initialInputState","value","isTouched","inputReducer","state","action","type","Error","useInput","validateInput","useReducer","inputState","dispatch","valueIsValid","hasError","inputChangeHandler","e","target","inputBlurHandler","inputReset","Card","props","className","classes","card","children","QuoteForm","useState","setIsEntering","trim","enteredAuthor","authorNameIsValid","authorNameHasError","authorNameChangeHandler","authorNameBlurHandler","authorNameReset","enteredText","textIsValid","textHasError","textChangeHandler","textBlurHandler","textReset","formIsValid","onFocus","form","onSubmit","event","preventDefault","quoteData","author","text","createdAt","Date","toDateString","onAddQuote","isLoading","loading","LoadingSpinner","control","htmlFor","id","onChange","onBlur","rows","actions","onClick","AddQuote","useHttp","sendQuoteHandler","requestHandler","status","history","useHistory","useEffect","push","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","httpReducer","data","error","errorMessage","requestFunction","pendingState","httpState","useCallback","requestData","a","responseData","message","FIREBASE_DOMAIN","fetchQuotesHandler","fetch","response","json","quotesData","ok","transformedData","quoteObj","fetchSingleQuote","quoteId","loadedQuote","method","body","JSON","stringify","headers","console","log","addComment","commentData","header","commentId","name","getAllComments","transformedComments","commentObj","module","exports"],"mappings":"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","file":"static/js/4.a0f190ff.chunk.js","sourcesContent":["/*What I need to do:\n- Import useReducer hook\n- Initial input state object: intial state of inputs\n- A reducer function, switch cases: INPUT, BLUR, RESET\n- Call the useReducer hook inside this useInput component */\nimport { useReducer } from \"react\";\n\n//Initialize initial input state\nconst initialInputState = {\n  value: \"\",\n  isTouched: false, //all inputs are untouched in the beginning\n};\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT\":\n      return { value: action.value, isTouched: state.isTouched };\n    case \"BLUR\":\n      return { value: state.value, isTouched: true };\n    case \"RESET\":\n      return { value: \"\", isTouched: false };\n    default:\n      throw new Error(\"Oops! Something went wrong!\");\n  }\n};\n\nconst useInput = (validateInput) => {\n  const [inputState, dispatch] = useReducer(inputReducer, initialInputState);\n\n  //Derived state constances\n  const valueIsValid = validateInput(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  //function to dispatch actions: input, blur and reset\n  const inputChangeHandler = (e) => {\n    dispatch({ type: \"INPUT\", value: e.target.value });\n  };\n\n  const inputBlurHandler = () => {\n    dispatch({ type: \"BLUR\" });\n  };\n\n  const inputReset = () => {\n    dispatch({ type: \"RESET\" });\n  };\n\n  //this useInput hook return an object - a goodie bag of values and methods which\n  // we can access in component where useInput is called\n  return {\n    value: inputState.value,\n    valueIsValid,\n    hasError,\n    inputChangeHandler,\n    inputBlurHandler,\n    inputReset,\n  };\n};\nexport default useInput;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useState } from \"react\";\n\nimport useInput from \"../../hooks/use-input\";\nimport Card from \"../../UI/Card\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\n\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  // const authorInputRef = useRef();\n  // const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  //Using useInput hook here\n  const {\n    value: enteredAuthor,\n    valueIsValid: authorNameIsValid,\n    hasError: authorNameHasError,\n    inputChangeHandler: authorNameChangeHandler,\n    inputBlurHandler: authorNameBlurHandler,\n    inputReset: authorNameReset,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredText,\n    valueIsValid: textIsValid,\n    hasError: textHasError,\n    inputChangeHandler: textChangeHandler,\n    inputBlurHandler: textBlurHandler,\n    inputReset: textReset,\n  } = useInput((value) => value.trim() !== \"\");\n\n  //derived state of form\n  let formIsValid = false;\n  if (authorNameIsValid && textIsValid) {\n    formIsValid = true;\n  }\n\n  //Form submission handler\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // const enteredAuthor = authorInputRef.current.value;\n    // const enteredText = textInputRef.current.value;\n\n    //not submitting if form is not valid\n    if (!formIsValid) {\n      return;\n    }\n\n    //Reset all inputs upon submission\n    authorNameReset();\n    textReset();\n\n    const quoteData = {\n      author: enteredAuthor,\n      text: enteredText,\n      createdAt: new Date().toDateString(),\n    };\n\n    //sending new quote to database\n    props.onAddQuote(quoteData);\n  };\n  /*this function is created outside the form submission function\n  since the submitFormHandler also triggered navigation so the setIsEntering cannot be done (it's\n  too late to update the isEntering state*/\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n  const finnishEnteringHandler = () => {\n    //not blockinh page navigation\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input\n              type=\"text\"\n              id=\"author\"\n              value={enteredAuthor}\n              onChange={authorNameChangeHandler}\n              onBlur={authorNameBlurHandler}\n            />\n            {authorNameHasError && (\n              <p className=\"error-text\">Must enter author name!</p>\n            )}\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea\n              id=\"text\"\n              rows=\"5\"\n              value={enteredText}\n              onChange={textChangeHandler}\n              onBlur={textBlurHandler}\n            ></textarea>\n            {textHasError && (\n              <p className=\"error-text\">Must enter quote here!</p>\n            )}\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finnishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\n\nimport { useHttp } from \"../hooks/use-http\";\nimport { sendQuoteHandler } from \"../lib/api\";\n\nfunction AddQuote(props) {\n  const { requestHandler, status } = useHttp(sendQuoteHandler);\n  const history = useHistory();\n\n  useEffect(() => {\n    /*hisotry.push(\"name-of-path-to-return\") so we can come back\n        history.replace(\"name-of-path\") is like a redirect, not coming back*/\n    if (status === \"completed\") {\n      history.push(\"/all-quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    requestHandler(quoteData);\n  };\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n}\n\nexport default AddQuote;\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*WHAT TO DO:\n- Import useReducer() hook\n- Initial state of http request- an object with keys (status, data, error)\n- Create httpReducer function and handle 3 different state scenarios: SENDING, SUCCESS, ERROR)\n- Create useHttp hook which takes 2 parameters: requestFunction, pendingState = false as default value\n- Evoke useReducer hook to get back httpState and dispatch function\n- A requestHandler inside useHttp which dispatch() function is called and receive action object {type: \"\", value: anyValue} as argument\n- requestHandler is evoked only when requestFunction varies (now acts as a dependency) (either \"fetching\" or \"sending\")\nso it is wrapped up in useCallback() hook*/\n\nimport { useCallback, useReducer } from \"react\";\n\n//const initialHttpState = { status: null, data: null, error: null };\n\nconst httpReducer = (state, action) => {\n  switch (action.type) {\n    case \"SENDING\":\n      return { data: null, error: null, status: \"pending\" };\n    case \"SUCCESS\":\n      return {\n        data: action.data,\n        error: null,\n        status: \"completed\",\n      };\n    case \"ERROR\":\n      return {\n        data: null,\n        error: action.errorMessage,\n        status: \"completed\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useHttp = (requestFunction, pendingState = false) => {\n  //evoke useReducer hook here, returns [httpState, dispatch]\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: pendingState ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  //request function handler\n  const requestHandler = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SENDING\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", data: responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n      //dependencies array: the requestFunction change depends on what kind of request is concerned\n    },\n    [requestFunction]\n  );\n\n  //useHttp hook returns a goodie bag (an object) of values and methods\n  return { requestHandler, ...httpState };\n};\n","// import { deleteDoc, doc, collection } from \"firebase/firestore\";\n\n//Helper variable\nconst FIREBASE_DOMAIN =\n  \"https://quote-notes-default-rtdb.europe-west1.firebasedatabase.app\";\n\n//Function to get quotes from Firebase database\nexport const fetchQuotesHandler = async () => {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const quotesData = await response.json();\n\n  if (!response.ok) {\n    throw new Error(quotesData.message || \"Something went wrong!\");\n  }\n  const transformedData = [];\n\n  for (const key in quotesData) {\n    const quoteObj = {\n      id: key,\n      ...quotesData[key],\n    };\n\n    transformedData.push(quoteObj);\n  }\n  return transformedData;\n};\n//Function to fetch a single quote by quoteId\nexport const fetchSingleQuote = async (quoteId) => {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n};\n//Function to send quote to Firebase database\nexport const sendQuoteHandler = async (quoteData) => {\n  try {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n      method: \"POST\",\n      body: JSON.stringify(quoteData),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (!response.ok) {\n      throw new Error(data.message || \"Something went wrong!\");\n    }\n    return null;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n//Function to add comments to the database\nexport const addComment = async (requestData) => {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      header: { \"Content-Type\": \"application/json\" },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n  return { commentId: data.name };\n};\n\n//Function to get all comments of a specific quote\nexport const getAllComments = async (quoteId) => {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n  const data = await response.json();\n  console.log(data);\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments\");\n  }\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      text: data[key],\n    };\n    console.log(commentObj);\n    transformedComments.push(commentObj);\n  }\n  return transformedComments;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2nKG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};"],"sourceRoot":""}