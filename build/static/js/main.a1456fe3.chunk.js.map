{"version":3,"sources":["UI/Header.module.css","context/auth-context.js","context/favorite-context.js","components/quotes/QuoteItem.module.css","components/auth/AuthForm.module.css","UI/LoadingSpinner.js","components/quotes/QuoteItem.js","components/layout/Layout.module.css","UI/LoadingSpinner.module.css","lib/firebase.js","UI/Header.js","components/layout/Layout.js","components/quotes/FavoriteList.js","pages/Favorites.js","components/auth/AuthForm.js","pages/AuthPage.js","App.js","index.js"],"names":["module","exports","logoutTimer","useAuth","useContext","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","useState","setToken","currentEmail","setCurrentEmail","userIsLoggedIn","Boolean","logoutHandler","useCallback","localStorage","removeItem","clearTimeout","useEffect","getItem","Date","now","authValue","deadLine","email","console","log","setItem","setTimeout","Provider","value","children","FavContext","FavProvider","favList","setFavList","favValue","favorites","favCount","setFavCount","LoadingSpinner","className","classes","spinner","QuoteItem","item","text","author","createdAt","onClick","onRemove","remove","sx","fontSize","fullscreen","to","id","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","Header","badgeCount","favCtx","JSON","parse","length","header","logo","navbar","navlist","navlist__item","activeClassName","active","badge","Layout","main","FavoriteList","map","fav","Favorites","AuthForm","history","useHistory","isLoading","setIsLoading","isLogin","setIsLogin","emailInputRef","useRef","passwordInputRef","auth","onSubmit","e","preventDefault","url","enteredEmail","current","enteredPassword","fetch","method","body","stringify","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","Error","idToken","expiresIn","push","catch","err","alert","control","htmlFor","type","required","ref","actions","toggle","prevState","AuthPage","HomePage","React","lazy","AddQuote","QuoteDetail","NotFound","AllQuotes","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1456fe3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__TkoI2\",\"logo\":\"Header_logo__39okJ\",\"navlist\":\"Header_navlist__3WGcw\",\"navlist__item\":\"Header_navlist__item__QQtfc\",\"navbar\":\"Header_navbar__2sIA2\",\"active\":\"Header_active__M_qDI\",\"badge\":\"Header_badge__3dj7m\"};","import {\n  createContext,\n  useContext,\n  useState,\n  useCallback,\n  useEffect,\n} from \"react\";\n\n//Global variables\nlet logoutTimer;\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n//Helper functions\n// const calculateRemainingTime = (expirationTime) => {\n//   const currentTime = new Date().getTime();\n//   const adjExpirationTime = new Date(expirationTime).getTime();\n//   //remainning = futureTime - now;\n//   const remainingTime = adjExpirationTime - currentTime;\n\n//   return remainingTime;\n// };\n\n// const retrieveStoredToken = () => {\n//   const storedToken = localStorage.getItem(\"token\");\n//   console.log(storedToken);\n//   const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n\n//   const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n//   if (remainingTime <= 60000) {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"expirationTime\");\n//     return null;\n//   }\n\n//   return { token: storedToken, duration: remainingTime };\n// };\n\n//Step 1: Create context\nexport const AuthContext = createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\n//Step 2: Create context Provider, a regular function component\nexport const AuthContextProvider = (props) => {\n  //Get initial token\n  // const initialToken = localStorage.getItem(\"token\");\n\n  //Create local state being share accross the app\n  const [token, setToken] = useState(null);\n  const [currentEmail, setCurrentEmail] = useState();\n\n  // const userIsLoggedIn = !!token; //!! change a truthy or falsy value to a boolean value\n  /*token is a string which has value (truthy)\n  token is an empty string (falsy) */\n  const userIsLoggedIn = Boolean(token);\n\n  const loginHandler = (token, deadLine, email) => {\n    setCurrentEmail(email);\n    setToken(token);\n    console.log(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"deadLine\", deadLine);\n\n    //logout user automatically after calculated remainingTime\n    logoutTimer = setTimeout(logoutHandler, deadLine - Date.now());\n  };\n\n  //logout function is wrapped in useCallback to prevent unnessary recreation when the App initially renders\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    clearTimeout(logoutTimer);\n  }, []);\n\n  //useEffect is evoked when the state of \"token\" changes\n  useEffect(() => {\n    if (token) {\n      let remainingTime = localStorage.getItem(\"deadLine\") - Date.now();\n      if (remainingTime <= 60000) logoutHandler();\n    }\n  }, [token, logoutHandler]);\n\n  //Step 3: Adding state to the authContextProvider\n  //Prepare value being shared\n  const authValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n    currentEmail: currentEmail,\n  };\n\n  /*Set \"authValue\" as the value for \"value\" attribute */\n  return (\n    <AuthContext.Provider value={authValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n","import { createContext, useState } from \"react\";\n\n//create new context\nexport const FavContext = createContext();\n\n//create new context provider component\nexport const FavProvider = (props) => {\n  const [favList, setFavList] = useState([]);\n  const [favCount, setFavCount] = useState(0);\n  //value to be shared\n  const favValue = {\n    favorites: favList,\n    setFavList: setFavList,\n    favCount: favCount,\n    setFavCount: setFavCount,\n  };\n  return (\n    <FavContext.Provider value={favValue}>{props.children}</FavContext.Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\",\"col-right\":\"QuoteItem_col-right__3npJZ\",\"fullscreen\":\"QuoteItem_fullscreen__14fm-\",\"remove\":\"QuoteItem_remove__mRXG6\",\"col-left\":\"QuoteItem_col-left__23vPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__2ZSKH\",\"control\":\"AuthForm_control__1evQ4\",\"actions\":\"AuthForm_actions__25Vmz\",\"toggle\":\"AuthForm_toggle__1Wxr6\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\nimport FullscreenIcon from \"@mui/icons-material/Fullscreen\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n// import { removeQuote } from \"../../lib/api\";\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>\"{props.text}\"</p>\n        </blockquote>\n        <div className={classes[\"col-left\"]}>\n          <figcaption>by {props.author}</figcaption>\n          <figcaption>created at {props.createdAt}</figcaption>\n        </div>\n      </figure>\n      <div className={classes[\"col-right\"]}>\n        <div onClick={props.onRemove} className={classes.remove}>\n          <DeleteIcon sx={{ fontSize: 32 }} />\n        </div>\n        <div className={classes.fullscreen}>\n          <Link to={`/all-quotes/${props.id}`}>\n            <FullscreenIcon sx={{ fontSize: 32 }} />\n          </Link>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__289Sr\"};","// Import functions from Firebases SDK\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\n//My app's Firebase configuration detail\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAVz31nXxptJDQCXFhrYkZ-HTEC-tZb5FY\",\n  authDomain: \"quote-notes.firebaseapp.com\",\n  databaseURL:\n    \"https://quote-notes-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"quote-notes\",\n  storageBucket: \"quote-notes.appspot.com\",\n  messagingSenderId: \"586707582442\",\n  appId: \"1:586707582442:web:43d93b65117e71758a8693\",\n};\n\n//Initialize Firebase database\nexport const app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\nexport default database;\n","import { useContext } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport classes from \"./Header.module.css\";\nimport { FavContext } from \"../context/favorite-context\";\nimport { useAuth } from \"../context/auth-context\";\n// import BookmarkIcon from \"@mui/icons-material/Bookmark\";\nfunction Header() {\n  const { isLoggedIn, logout, currentEmail } = useAuth();\n\n  const favCtx = useContext(FavContext);\n  let badgeCount;\n  if (localStorage.getItem(\"favQuotes\") !== null) {\n    badgeCount = JSON.parse(localStorage.getItem(\"favQuotes\")).length;\n  } else {\n    badgeCount = favCtx.favCount;\n  }\n\n  //Logout\n  const logoutHandler = () => {\n    logout();\n  };\n  return (\n    <header className={classes.header}>\n      <Link to=\"/home\">\n        <div className={classes.logo}>Quote Notes</div>\n      </Link>\n      <nav className={classes.navbar}>\n        <ul className={classes.navlist}>\n          <li className={classes.navlist__item}>\n            <NavLink activeClassName={classes.active} to=\"/all-quotes\">\n              All Quotes\n            </NavLink>\n          </li>\n          <li className={classes.navlist__item}>\n            <NavLink activeClassName={classes.active} to=\"/add-a-quote\">\n              Add a Quote\n            </NavLink>\n          </li>\n          {!isLoggedIn && (\n            <li className={classes.navlist__item}>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li className={classes.navlist__item}>\n              <NavLink to=\"/favorites\" activeClassName={classes.active}>\n                Favorites\n                <span className={classes.badge}>{badgeCount}</span>\n              </NavLink>\n            </li>\n          )}\n\n          {isLoggedIn && (\n            <li className={classes.navlist__item}>\n              <button onClick={() => logoutHandler()}>\n                Logout, {currentEmail}\n              </button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import { Fragment } from \"react\";\nimport Header from \"../../UI/Header\";\nimport classes from \"./Layout.module.css\";\nfunction Layout(props) {\n  return (\n    <Fragment>\n      <Header />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport QuoteItem from \"./QuoteItem\";\nconst FavoriteList = (props) => {\n  let content;\n  if (props.favorites.length === 0) {\n    content = <p>No favorite quotes yet! Maybe adding one?</p>;\n  } else {\n    content = props.favorites.map((fav) => (\n      <QuoteItem\n        key={fav.id}\n        text={fav.text}\n        author={fav.author}\n        createdAt={fav.createdAt}\n      />\n    ));\n  }\n  return content;\n};\nexport default FavoriteList;\n","import React, { useContext } from \"react\";\nimport FavoriteList from \"../components/quotes/FavoriteList\";\nimport { FavContext } from \"../context/favorite-context\";\n\nconst Favorites = (props) => {\n  const favCtx = useContext(FavContext);\n  let favorites;\n  if (localStorage.getItem(\"favQuotes\") !== null) {\n    favorites = JSON.parse(localStorage.getItem(\"favQuotes\"));\n  } else {\n    favorites = favCtx.favorites;\n  }\n  console.log(favorites);\n  const removeFavList = () => {\n    localStorage.removeItem(\"favQuotes\");\n    favCtx.setFavList([]);\n    favCtx.setFavCount(0);\n  };\n\n  return (\n    <>\n      <h1>List of favorites</h1>\n      {\n        <p>\n          You have{\" \"}\n          {favorites.length <= 1\n            ? `${favorites.length} favorite quote`\n            : `${favorites.length} favorite quotes`}\n        </p>\n      }\n      <FavoriteList favorites={favorites} />{\" \"}\n      {favorites.length !== 0 && (\n        <button className=\"btn--minimal\" onClick={removeFavList}>\n          Clear list\n        </button>\n      )}\n    </>\n  );\n};\nexport default Favorites;\n","import { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\nimport { useAuth } from \"../../context/auth-context\";\n\nconst AuthForm = () => {\n  //Step 4: Accessing context with useContext hook\n  const { login } = useAuth();\n\n  let history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    //optional: add validation\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAVz31nXxptJDQCXFhrYkZ-HTEC-tZb5FY\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAVz31nXxptJDQCXFhrYkZ-HTEC-tZb5FY\";\n    }\n\n    //send signup request\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            //show an error modal\n            let errorMessage = \"Authentication failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        console.log(data);\n        login(data.idToken, Date.now() + +data.expiresIn * 1000, data.email);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n\n    //reset inputs\n    emailInputRef.current.value = \"\";\n    passwordInputRef.current.value = \"\";\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"../components/auth/AuthForm\";\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport Favorites from \"./pages/Favorites\";\nimport LoadingSpinner from \"./UI/LoadingSpinner\";\nimport AuthPage from \"./pages/AuthPage\";\nimport { useAuth } from \"./context/auth-context\";\n\nconst HomePage = React.lazy(() => import(\"./pages/HomePage\"));\nconst AddQuote = React.lazy(() => import(\"./pages/AddQuote\")); //downloaded when needed\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\nconst AllQuotes = React.lazy(() => import(\"./pages/AllQuotes\"));\n\nfunction App() {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <Router>\n      <Layout>\n        <Suspense\n          fallback={\n            <div className=\"centered\">\n              <LoadingSpinner />\n            </div>\n          }\n        >\n          <Switch>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route path=\"/home\">\n              <HomePage />\n            </Route>\n            {!isLoggedIn && (\n              <Route path=\"/auth\">\n                <AuthPage />\n              </Route>\n            )}\n            <Route path=\"/all-quotes\" exact>\n              <AllQuotes />\n            </Route>\n            <Route path=\"/all-quotes/:quoteId\">\n              <QuoteDetail />\n            </Route>\n            <Route path=\"/add-a-quote\">\n              <h1>Add your own quotes</h1>\n              <AddQuote />\n            </Route>\n            <Route path=\"/favorites\">\n              <Favorites />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Suspense>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n\n//A All quotes - page: show all quotes\n// A quote detail page : show a quote detail\n// A Add quote - page : add new quote\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { FavProvider } from \"../src/context/favorite-context\";\nimport { AuthContextProvider } from \"../src/context/auth-context\";\nimport \"./index.css\";\nimport { app } from \"../src/lib/firebase\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <FavProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </FavProvider>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}